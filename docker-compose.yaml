version: '3.8'

services:
  server:
    image: innovizswt/ataskq:${ATASKQ_VERSION}
    ports:
      - 8080:8080
    environment:
      ATASKQ_SERVER_WORKERS: 4
      ATASKQ_CONFIG: "server"
      ataskq.connection: pg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/postgres
    command: ["sh", "run_server"]
    depends_on:
      - background
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d postgres
      interval: 10s
      timeout: 3s
      retries: 3

  background:
    image: innovizswt/ataskq:${ATASKQ_VERSION}
    environment:
      ATASKQ_CONFIG: "server"
      ataskq.connection: pg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/postgres
    command: ["sh", "run_background"]
    depends_on:
      - postgres
    restart: unless-stopped

  runner:
    image: innovizswt/ataskq:${ATASKQ_VERSION}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}      
      ATASKQ_CONFIG: "client"
    command: ["sh", "run_runner"]
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:16.1
    # volumes:
    #   - postgres:/var/lib/postgresql/data:Z
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
    restart: unless-stopped

  jupyter-lab:
    # https://github.com/jupyter/docker-stacks
    image: jupyter/minimal-notebook
    ports:
      - 8888:8888
    depends_on:
      - server
    volumes:
      - ./notebook:/home/jovyan/examples
    restart: unless-stopped

volumes:
  postgres: